{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "Ec2KeyName": {
      "Type": "String",
      "Default": "spark-cluster-key"
    },

    "TargetS3BucketArn": {
      "Type": "String",
      "Default": "arn:aws:s3:::udacity-mm-spark-etl-test"
    },

    "SourceS3BucketArn": {
      "Type": "String",
      "Default": "arn:aws:s3:::udacity-dend"
    }
  },
  "Resources": {
    "cluster": {
      "Type": "AWS::EMR::Cluster",
      "Properties": {
        "Instances": {
          "MasterInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "m5.xlarge",
            "Market": "ON_DEMAND",
            "Name": "cfnMaster"
          },
          "CoreInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "m5.xlarge",
            "Market": "ON_DEMAND",
            "Name": "cfnCore"
          },
          "Ec2KeyName": { "Ref": "Ec2KeyName" },
          "TerminationProtected": "false",
          "Ec2SubnetId": { "Ref": "Subnet" }
        },
        "Name": "spark-cluster",
        "JobFlowRole": { "Ref": "emrEc2InstanceProfile" },
        "ServiceRole": { "Ref": "emrRole" },
        "ReleaseLabel": "emr-5.28.0",
        "VisibleToAllUsers": true
      }
    },
    "emrRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",

          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "elasticmapreduce.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
        ]
      }
    },
    "emrEc2Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",

          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyName": "S3TargetFullAccess",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": ["/", [{ "Ref": "TargetS3BucketArn" }, "*"]]
                  },
                  "Action": ["s3:*"]
                }
              ]
            }
          },

          {
            "PolicyName": "S3SourceReadOnlyAccess",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": ["/", [{ "Ref": "SourceS3BucketArn" }, "*"]]
                  },
                  "Action": ["s3:Get*", "s3:List*"]
                }
              ]
            }
          }
        ]
      }
    },
    "emrEc2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{ "Ref": "emrEc2Role" }]
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16"
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 22,
            "ToPort": 22,
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 18080,
            "ToPort": 18080,
            "IpProtocol": "tcp"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "FromPort": 4040,
            "ToPort": 4040,
            "IpProtocol": "tcp"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    }
  },
  "Outputs": {
    "KeyName": {
      "Description": "Use the following key to ssh to the EMR cluster.",
      "Value": { "Ref": "Ec2KeyName" }
    },

    "MasterNodeEndpoint": {
      "Description": "Access the EMR cluster from the following endpoint (the user should be hadoop)",
      "Value": {
        "Fn::GetAtt": ["cluster", "MasterPublicDNS"]
      }
    }
  }
}
